name: "Size: Comment"

# read-write repo token
# access to secrets
#
# https://securitylab.github.com/resources/github-actions-preventing-pwn-requests/
on:
  workflow_dispatch:
    inputs:
      RUN_ID:
        description: Which workflow run to get artifacts from
        required: true
        type: string
  workflow_run:
    workflows: ["Size: PR"]
    types:
      - completed

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  compare_sizes:
    name: 'Compare Sizes and Comment'
    runs-on: 'ubuntu-latest'

    steps:
      - run: sudo snap install dust

      - uses: dawidd6/action-download-artifact@v9
        with:
          run_id: ${{ inputs.RUN_ID || github.event.workflow_run.id }}
      - run: ls -la

      - uses: actions/download-artifact@v4
        with:
          name: sizes-main

      - name: "[PR] Get sizes for development outputs"
        id: dev
        run: |
          cd pr/

          echo 'sizes<<EOF' >> $GITHUB_OUTPUT
          while IFS= read -r line; do
              echo "$line" >> $GITHUB_OUTPUT
          done <<< $(cat out.txt)
          echo 'EOF' >> $GITHUB_OUTPUT
          cat out.txt

      - name: "[PR]: Get PR Number"
        id: pr-number
        run: echo "number=$(cat pr/NR)" >> $GITHUB_OUTPUT

      - name: "[Main] Get sizes for development outputs"
        id: main-dev
        run: |
          cd main/

          echo 'sizes<<EOF' >> $GITHUB_OUTPUT
          while IFS= read -r line; do
              echo "$line" >> $GITHUB_OUTPUT
          done <<< $(cat out.txt)
          echo 'EOF' >> $GITHUB_OUTPUT
          cat out.txt

      #########################
      # Intended Layout:
      #
      #  |      | This PR | Main |
      #  | Dev  |   x1    |  y1  |
      #  | Prod |   x2    |  y2  |
      #
      #  NOTE: we we don't have a prod build for this library
      #        because we currently expect non-compiler usage
      #        (so consumers should have terser or similar properly configured for DCE)
      #
      #########################
      - uses: mshick/add-pr-comment@v2
        with:
          issue: ${{ steps.pr-number.outputs.number }}
          message: |
            <table><thead><tr><th></th><th>This PR</th><th>main</th></tr></thead>
            <tbody>
            <tr><td>Dev</td><td>

            ```
            ${{ steps.dev.outputs.sizes }}
            ```

            </td><td>

            ```
            ${{ steps.main-dev.outputs.sizes }}
            ```

            </td></tr>
            </tbody></table>



        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

