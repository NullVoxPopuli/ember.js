import { DOMTreeConstruction, ConcreteBounds, AbstractElementBuilder, CursorImpl } from '@glimmer/runtime';
import createHTMLDocument from '@simple-dom/document';

function currentNode(cursor){let{element:element,nextSibling:nextSibling}=cursor;return nextSibling===null?element.lastChild:nextSibling.previousSibling}function serializeBuilder(env,cursor){return SerializeBuilder.forInitialRender(env,cursor)}class NodeDOMTreeConstruction extends DOMTreeConstruction{constructor(doc){super(doc||createHTMLDocument());}setupUselessElement(){}insertHTMLBefore(parent,reference,html){let raw=this.document.createRawHTMLSection(html);parent.insertBefore(raw,reference);return new ConcreteBounds(parent,raw,raw)}createElement(tag){return this.document.createElement(tag)}setAttribute(element,name,value){element.setAttribute(name,value);}}const NEEDS_EXTRA_CLOSE=new WeakMap;class SerializeBuilder extends AbstractElementBuilder{serializeBlockDepth=0;createCursor(element,nextSibling=null){return new CursorImpl(element,nextSibling)}__openBlock(){let{tagName:tagName}=this.element;if(tagName!=="TITLE"&&tagName!=="SCRIPT"&&tagName!=="STYLE"){let depth=this.serializeBlockDepth++;this.__appendComment(`%+b:${depth}%`);}super.__openBlock();}__closeBlock(){let{tagName:tagName}=this.element;super.__closeBlock();if(tagName!=="TITLE"&&tagName!=="SCRIPT"&&tagName!=="STYLE"){let depth=--this.serializeBlockDepth;this.__appendComment(`%-b:${depth}%`);}}__appendHTML(html){let{tagName:tagName}=this.element;if(tagName==="TITLE"||tagName==="SCRIPT"||tagName==="STYLE")return super.__appendHTML(html);let first=this.__appendComment("%glmr%");if(tagName==="TABLE"){let openIndex=html.indexOf("<");if(openIndex>-1){let tr=html.slice(openIndex+1,openIndex+3);tr==="tr"&&(html=`<tbody>${html}</tbody>`);}}html===""?this.__appendComment("% %"):super.__appendHTML(html);let last=this.__appendComment("%glmr%");return new ConcreteBounds(this.element,first,last)}__appendText(string){let{tagName:tagName}=this.element;let current=currentNode(this);if(tagName==="TITLE"||tagName==="SCRIPT"||tagName==="STYLE")return super.__appendText(string);if(string==="")return this.__appendComment("% %");current&&current.nodeType===3&&this.__appendComment("%|%");return super.__appendText(string)}closeElement(){if(NEEDS_EXTRA_CLOSE.has(this.element)){NEEDS_EXTRA_CLOSE.delete(this.element);super.closeElement();}return super.closeElement()}openElement(tag){if(tag==="tr"&&this.element.tagName!=="TBODY"&&this.element.tagName!=="THEAD"&&this.element.tagName!=="TFOOT"){this.openElement("tbody");NEEDS_EXTRA_CLOSE.set(this.constructing,true);this.flushElement(null);}return super.openElement(tag)}pushRemoteElement(element,cursorId,insertBefore=null){let{dom:dom}=this;let script=dom.createElement("script");script.setAttribute("glmr",cursorId);dom.insertBefore(element,script,insertBefore);return super.pushRemoteElement(element,cursorId,insertBefore)}}

export { NodeDOMTreeConstruction, serializeBuilder };
